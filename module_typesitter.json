{
  "modules": [
    {
      "node": {
        "name": "auto3d_rex",
        "description": "Generate 3D conformers from SMILES strings",
        "ins": [
          {
            "doc": {
              "fields": {
                "capacity": "Number of SMILES that the model will handle for 1 G memory, defaults to 42",
                "opt_steps": "The maximum number of optimization steps, defaults to 5000",
                "verbose": "When True, save all meta data while running, defaults to False",
                "optimizing_engine": "The engine used for optimization, defaults to Auto3dOptimizingEngines::AIMNET",
                "threshold": "If the RMSD between two conformers are within threhold, they are considered as duplicates. One of them will be removed, defaults to 0.3",
                "enumerate_tautomer": "When True, enumerate tautomers for the input, defaults to False",
                "convergence_threshold": " Optimization is considered as converged if maximum force is below this threshold, defaults to 0.003",
                "window": "Outputs the structures whose energies are within x (kcal/mol) from the lowest energy conformer",
                "memory": "Memory in GB",
                "max_confs": "Maximum number of isomers for each SMILES. Default is None, and Auto3D will uses a dynamic conformer number for each SMILES.\nThe number of conformer for each SMILES is the number of heavey atoms in the SMILES minus 1, defaults to None",
                "mpi_np": "Number of MPI processes, defaults to 4",
                "batchsize_atoms": "The number of atoms in 1 optimization batch for per 1GB memory, defaults to 1024",
                "patience": "If the force does not decrease for a continuous patience steps, the conformer will drop out of the optimization loop, defaults to 1000",
                "k": "Output top k structures for each molecule",
                "enumerate_isomer": "When True, cis/trans and r/s isomers are enumerated, defaults to True"
              }
            },
            "k": "record",
            "t": {
              "convergence_threshold": {
                "k": "optional",
                "t": "f32"
              },
              "max_confs": {
                "k": "optional",
                "t": "u32"
              },
              "enumerate_tautomer": {
                "k": "optional",
                "t": "bool"
              },
              "batchsize_atoms": {
                "k": "optional",
                "t": "u32"
              },
              "optimizing_engine": {
                "k": "optional",
                "t": {
                  "k": "enum",
                  "t": [
                    "ANI2x",
                    "ANI2xt",
                    "AIMNET"
                  ],
                  "n": "Auto3dOptimizingEngines"
                }
              },
              "threshold": {
                "k": "optional",
                "t": "f32"
              },
              "opt_steps": {
                "k": "optional",
                "t": "u32"
              },
              "job_name": {
                "k": "optional",
                "t": "string"
              },
              "memory": {
                "k": "optional",
                "t": "u32"
              },
              "enumerate_isomer": {
                "k": "optional",
                "t": "bool"
              },
              "capacity": {
                "k": "optional",
                "t": "u32"
              },
              "patience": {
                "k": "optional",
                "t": "u32"
              },
              "window": {
                "k": "optional",
                "t": "f32"
              },
              "verbose": {
                "k": "optional",
                "t": "bool"
              },
              "k": {
                "k": "optional",
                "t": "i32"
              },
              "mpi_np": {
                "k": "optional",
                "t": "u32"
              }
            },
            "n": "Auto3dOptions"
          },
          {
            "k": "array",
            "t": {
              "k": "alias",
              "t": "string"
            }
          }
        ]
      }
    },
    {
      "node": {
        "name": "gnina_rex",
        "description": "Run docking of small molecules to proteins with gnina.",
        "ins": [
          {
            "doc": {
              "fields": {
                "num_modes": "the number of dock poses to report",
                "minimize": "whether to minimise the energy of the final pose",
                "exhaustiveness": "the search extent for the docking algorithm"
              }
            },
            "k": "record",
            "t": {
              "exhaustiveness": {
                "k": "optional",
                "t": "u32"
              },
              "minimize": {
                "k": "optional",
                "t": "bool"
              },
              "num_modes": {
                "k": "optional",
                "t": "u32"
              }
            },
            "n": "GninaOptions"
          },
          {
            "k": "array",
            "t": {
              "k": "tuple",
              "t": [
                {
                  "k": "record",
                  "t": {
                    "path": {
                      "k": "@",
                      "t": {
                        "doc": {
                          "fields": {
                            "connectivity": "Optional list of bonds. Because bonds are perceived, this list should\nnot be considered a reliable source of bond information.",
                            "velocities": "Contains the x, y, z components of initial atom velocities in Angstroms/ps\nV1 only",
                            "geometry": "XYZ coordinates of each atom. It must be 3 times the length of\n`symbols`.",
                            "fragment_partial_charges": "Optional list of the formal charge of each fragment. If present, then it\nmust be the same length as `fragments`.",
                            "fragments": "Optional list of fragments. If present, then all atoms must be in\nexactly one fragment.",
                            "fragment_formal_charges": "Optional list of the formal charge of each fragment. If present, then it\nmust be the same length as `fragments`.",
                            "symbols": "Element of each atom.",
                            "partial_charges": "Optional list of the partial charge of each atom. If present, then it\nmust be the same length as `symbols`.",
                            "labels": "Optional list of the label of each atom. Often this is used for\nlabelling specific atoms within residues (e.g. alpha carbons). If\npresent, then it must be the same length as `symbols`.",
                            "fragment_multiplicities": "Optional list of the multiplicity of each fragment. This is only\nrelevant for open-shell systems. If present, then it must be the same\nlength as `fragments`.",
                            "formal_charges": "Optional list of the formal charge of each atom. If present, then it\nmust be the same length as `symbols`."
                          }
                        },
                        "k": "record",
                        "t": {
                          "geometry": {
                            "k": "array",
                            "t": "f32"
                          },
                          "partial_charges": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "alias",
                                "t": "f32"
                              }
                            }
                          },
                          "velocities": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": "f32"
                            }
                          },
                          "fragment_formal_charges": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "alias",
                                "t": "i32"
                              }
                            }
                          },
                          "fragment_multiplicities": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "alias",
                                "t": "u8"
                              }
                            }
                          },
                          "symbols": {
                            "k": "array",
                            "t": {
                              "k": "enum",
                              "t": [
                                {
                                  "H": 1
                                },
                                "He",
                                "Li",
                                "Be",
                                "B",
                                "C",
                                "N",
                                "O",
                                "F",
                                "Ne",
                                "Na",
                                "Mg",
                                "Al",
                                "Si",
                                "P",
                                "S",
                                "Cl",
                                "Ar",
                                "K",
                                "Ca",
                                "Sc",
                                "Ti",
                                "V",
                                "Cr",
                                "Mn",
                                "Fe",
                                "Co",
                                "Ni",
                                "Cu",
                                "Zn",
                                "Ga",
                                "Ge",
                                "As",
                                "Se",
                                "Br",
                                "Kr",
                                "Rb",
                                "Sr",
                                "Y",
                                "Zr",
                                "Nb",
                                "Mo",
                                "Tc",
                                "Ru",
                                "Rh",
                                "Pd",
                                "Ag",
                                "Cd",
                                "In",
                                "Sn",
                                "Sb",
                                "Te",
                                "I",
                                "Xe",
                                "Cs",
                                "Ba",
                                "La",
                                "Ce",
                                "Pr",
                                "Nd",
                                "Pm",
                                "Sm",
                                "Eu",
                                "Gd",
                                "Tb",
                                "Dy",
                                "Ho",
                                "Er",
                                "Tm",
                                "Yb",
                                "Lu",
                                "Hf",
                                "Ta",
                                "W",
                                "Re",
                                "Os",
                                "Ir",
                                "Pt",
                                "Au",
                                "Hg",
                                "Tl",
                                "Pb",
                                "Bi",
                                "Po",
                                "At",
                                "Rn",
                                "Fr",
                                "Ra",
                                "Ac",
                                "Th",
                                "Pa",
                                "U",
                                "Np",
                                "Pu",
                                "Am",
                                "Cm",
                                "Bk",
                                "Cf",
                                "Es",
                                "Fm",
                                "Md",
                                "No",
                                "Lr",
                                "Rf",
                                "Db",
                                "Sg",
                                "Bh",
                                "Hs",
                                "Mt",
                                "Ds",
                                "Rg",
                                "Cn",
                                "Nh",
                                "Fl",
                                "Mc",
                                "Lv",
                                "Ts",
                                "Og"
                              ],
                              "n": "Element"
                            }
                          },
                          "fragment_partial_charges": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "alias",
                                "t": "f32"
                              }
                            }
                          },
                          "schema_version": {
                            "k": "alias",
                            "t": "string"
                          },
                          "labels": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": "string"
                            }
                          },
                          "fragments": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "array",
                                "t": {
                                  "k": "alias",
                                  "t": "u32"
                                }
                              }
                            }
                          },
                          "formal_charges": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "alias",
                                "t": "i32"
                              }
                            }
                          },
                          "connectivity": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "alias",
                                "t": {
                                  "k": "tuple",
                                  "t": [
                                    {
                                      "k": "alias",
                                      "t": "u32"
                                    },
                                    {
                                      "k": "alias",
                                      "t": "u32"
                                    },
                                    {
                                      "k": "enum",
                                      "t": [
                                        {
                                          "Unspecified": 0
                                        },
                                        {
                                          "Single": 1
                                        },
                                        {
                                          "Double": 2
                                        },
                                        {
                                          "Triple": 3
                                        },
                                        {
                                          "Quadriple": 4
                                        },
                                        {
                                          "Quintuple": 5
                                        },
                                        {
                                          "Sextuple": 6
                                        },
                                        {
                                          "FiveAndAHalf": 250
                                        },
                                        {
                                          "FourAndAHalf": 251
                                        },
                                        {
                                          "ThreeAndAHalf": 252
                                        },
                                        {
                                          "TwoAndAHalf": 253
                                        },
                                        {
                                          "OneAndAHalf": 254
                                        },
                                        {
                                          "Ring": 255
                                        }
                                      ],
                                      "n": "BondOrder"
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "n": "Topology"
                      }
                    },
                    "format": {
                      "k": "optional",
                      "t": {
                        "k": "enum",
                        "t": [
                          "json",
                          "bin"
                        ],
                        "n": "ObjectFormat"
                      }
                    },
                    "size": "u64"
                  },
                  "n": "Object"
                },
                {
                  "k": "record",
                  "t": {
                    "path": {
                      "k": "@",
                      "t": {
                        "doc": {
                          "fields": {
                            "residues": "List of residues",
                            "seqs": "Sequence names, e.g. amino acid or nucleotide names",
                            "labels": "Optional list of residue labels. Any given residue may have multiple labels. `labels[i]`\ncorresponds to residue with id `labeled[i]`. Must be present if `labeled` is present.\n\nWARN: Deprecated.",
                            "seq_ns": "Sequence numbers, identigfying the position of the residue in the sequence",
                            "labeled": "Optional list of residue ids that have labels. Must be present if `labels` is present.\n\nWARN: Deprecated.",
                            "insertion_codes": "Insertion codes, specifying the order of residues inserted between existing residues"
                          }
                        },
                        "k": "record",
                        "t": {
                          "seq_ns": {
                            "k": "array",
                            "t": "i32"
                          },
                          "seqs": {
                            "k": "array",
                            "t": "string"
                          },
                          "residues": {
                            "k": "array",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "alias",
                                "t": "u32"
                              }
                            }
                          },
                          "insertion_codes": {
                            "k": "array",
                            "t": "string"
                          },
                          "labels": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "array",
                                "t": "string"
                              }
                            }
                          },
                          "labeled": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "alias",
                                "t": "u32"
                              }
                            }
                          }
                        },
                        "n": "Residues"
                      }
                    },
                    "format": {
                      "k": "optional",
                      "t": {
                        "k": "enum",
                        "t": [
                          "json",
                          "bin"
                        ],
                        "n": "ObjectFormat"
                      }
                    },
                    "size": "u64"
                  },
                  "n": "Object"
                },
                {
                  "k": "record",
                  "t": {
                    "format": {
                      "k": "optional",
                      "t": {
                        "k": "enum",
                        "t": [
                          "json",
                          "bin"
                        ],
                        "n": "ObjectFormat"
                      }
                    },
                    "path": {
                      "k": "@",
                      "t": {
                        "doc": {
                          "fields": {
                            "labels": "WARN: Deprecated.",
                            "labeled": "WARN: Deprecated."
                          }
                        },
                        "k": "record",
                        "t": {
                          "alpha_helices": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "alias",
                                "t": "u32"
                              }
                            }
                          },
                          "labeled": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "alias",
                                "t": "u32"
                              }
                            }
                          },
                          "chains": {
                            "k": "array",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "alias",
                                "t": "u32"
                              }
                            }
                          },
                          "labels": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "array",
                                "t": "string"
                              }
                            }
                          },
                          "beta_sheets": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "alias",
                                "t": "u32"
                              }
                            }
                          }
                        },
                        "n": "Chains"
                      }
                    },
                    "size": "u64"
                  },
                  "n": "Object"
                }
              ]
            }
          },
          {
            "k": "array",
            "t": {
              "doc": {
                "fields": {}
              },
              "k": "record",
              "t": {
                "max": {
                  "k": "tuple",
                  "t": [
                    "f32",
                    "f32",
                    "f32"
                  ]
                },
                "min": {
                  "k": "tuple",
                  "t": [
                    "f32",
                    "f32",
                    "f32"
                  ]
                }
              },
              "n": "BindingSiteBoundingBox"
            }
          },
          {
            "k": "array",
            "t": {
              "k": "tuple",
              "t": [
                {
                  "k": "record",
                  "t": {
                    "path": {
                      "k": "@",
                      "t": {
                        "doc": {
                          "fields": {
                            "symbols": "Element of each atom.",
                            "labels": "Optional list of the label of each atom. Often this is used for\nlabelling specific atoms within residues (e.g. alpha carbons). If\npresent, then it must be the same length as `symbols`.",
                            "connectivity": "Optional list of bonds. Because bonds are perceived, this list should\nnot be considered a reliable source of bond information.",
                            "fragments": "Optional list of fragments. If present, then all atoms must be in\nexactly one fragment.",
                            "partial_charges": "Optional list of the partial charge of each atom. If present, then it\nmust be the same length as `symbols`.",
                            "fragment_formal_charges": "Optional list of the formal charge of each fragment. If present, then it\nmust be the same length as `fragments`.",
                            "fragment_multiplicities": "Optional list of the multiplicity of each fragment. This is only\nrelevant for open-shell systems. If present, then it must be the same\nlength as `fragments`.",
                            "geometry": "XYZ coordinates of each atom. It must be 3 times the length of\n`symbols`.",
                            "fragment_partial_charges": "Optional list of the formal charge of each fragment. If present, then it\nmust be the same length as `fragments`.",
                            "formal_charges": "Optional list of the formal charge of each atom. If present, then it\nmust be the same length as `symbols`.",
                            "velocities": "Contains the x, y, z components of initial atom velocities in Angstroms/ps\nV1 only"
                          }
                        },
                        "k": "record",
                        "t": {
                          "fragment_partial_charges": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "alias",
                                "t": "f32"
                              }
                            }
                          },
                          "partial_charges": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "alias",
                                "t": "f32"
                              }
                            }
                          },
                          "labels": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": "string"
                            }
                          },
                          "formal_charges": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "alias",
                                "t": "i32"
                              }
                            }
                          },
                          "symbols": {
                            "k": "array",
                            "t": {
                              "k": "enum",
                              "t": [
                                {
                                  "H": 1
                                },
                                "He",
                                "Li",
                                "Be",
                                "B",
                                "C",
                                "N",
                                "O",
                                "F",
                                "Ne",
                                "Na",
                                "Mg",
                                "Al",
                                "Si",
                                "P",
                                "S",
                                "Cl",
                                "Ar",
                                "K",
                                "Ca",
                                "Sc",
                                "Ti",
                                "V",
                                "Cr",
                                "Mn",
                                "Fe",
                                "Co",
                                "Ni",
                                "Cu",
                                "Zn",
                                "Ga",
                                "Ge",
                                "As",
                                "Se",
                                "Br",
                                "Kr",
                                "Rb",
                                "Sr",
                                "Y",
                                "Zr",
                                "Nb",
                                "Mo",
                                "Tc",
                                "Ru",
                                "Rh",
                                "Pd",
                                "Ag",
                                "Cd",
                                "In",
                                "Sn",
                                "Sb",
                                "Te",
                                "I",
                                "Xe",
                                "Cs",
                                "Ba",
                                "La",
                                "Ce",
                                "Pr",
                                "Nd",
                                "Pm",
                                "Sm",
                                "Eu",
                                "Gd",
                                "Tb",
                                "Dy",
                                "Ho",
                                "Er",
                                "Tm",
                                "Yb",
                                "Lu",
                                "Hf",
                                "Ta",
                                "W",
                                "Re",
                                "Os",
                                "Ir",
                                "Pt",
                                "Au",
                                "Hg",
                                "Tl",
                                "Pb",
                                "Bi",
                                "Po",
                                "At",
                                "Rn",
                                "Fr",
                                "Ra",
                                "Ac",
                                "Th",
                                "Pa",
                                "U",
                                "Np",
                                "Pu",
                                "Am",
                                "Cm",
                                "Bk",
                                "Cf",
                                "Es",
                                "Fm",
                                "Md",
                                "No",
                                "Lr",
                                "Rf",
                                "Db",
                                "Sg",
                                "Bh",
                                "Hs",
                                "Mt",
                                "Ds",
                                "Rg",
                                "Cn",
                                "Nh",
                                "Fl",
                                "Mc",
                                "Lv",
                                "Ts",
                                "Og"
                              ],
                              "n": "Element"
                            }
                          },
                          "fragment_formal_charges": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "alias",
                                "t": "i32"
                              }
                            }
                          },
                          "geometry": {
                            "k": "array",
                            "t": "f32"
                          },
                          "connectivity": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "alias",
                                "t": {
                                  "k": "tuple",
                                  "t": [
                                    {
                                      "k": "alias",
                                      "t": "u32"
                                    },
                                    {
                                      "k": "alias",
                                      "t": "u32"
                                    },
                                    {
                                      "k": "enum",
                                      "t": [
                                        {
                                          "Unspecified": 0
                                        },
                                        {
                                          "Single": 1
                                        },
                                        {
                                          "Double": 2
                                        },
                                        {
                                          "Triple": 3
                                        },
                                        {
                                          "Quadriple": 4
                                        },
                                        {
                                          "Quintuple": 5
                                        },
                                        {
                                          "Sextuple": 6
                                        },
                                        {
                                          "FiveAndAHalf": 250
                                        },
                                        {
                                          "FourAndAHalf": 251
                                        },
                                        {
                                          "ThreeAndAHalf": 252
                                        },
                                        {
                                          "TwoAndAHalf": 253
                                        },
                                        {
                                          "OneAndAHalf": 254
                                        },
                                        {
                                          "Ring": 255
                                        }
                                      ],
                                      "n": "BondOrder"
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "velocities": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": "f32"
                            }
                          },
                          "fragments": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "array",
                                "t": {
                                  "k": "alias",
                                  "t": "u32"
                                }
                              }
                            }
                          },
                          "schema_version": {
                            "k": "alias",
                            "t": "string"
                          },
                          "fragment_multiplicities": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "alias",
                                "t": "u8"
                              }
                            }
                          }
                        },
                        "n": "Topology"
                      }
                    },
                    "size": "u64",
                    "format": {
                      "k": "optional",
                      "t": {
                        "k": "enum",
                        "t": [
                          "json",
                          "bin"
                        ],
                        "n": "ObjectFormat"
                      }
                    }
                  },
                  "n": "Object"
                },
                {
                  "k": "record",
                  "t": {
                    "size": "u64",
                    "format": {
                      "k": "optional",
                      "t": {
                        "k": "enum",
                        "t": [
                          "json",
                          "bin"
                        ],
                        "n": "ObjectFormat"
                      }
                    },
                    "path": {
                      "k": "@",
                      "t": {
                        "doc": {
                          "fields": {
                            "labels": "Optional list of residue labels. Any given residue may have multiple labels. `labels[i]`\ncorresponds to residue with id `labeled[i]`. Must be present if `labeled` is present.\n\nWARN: Deprecated.",
                            "seq_ns": "Sequence numbers, identigfying the position of the residue in the sequence",
                            "seqs": "Sequence names, e.g. amino acid or nucleotide names",
                            "residues": "List of residues",
                            "insertion_codes": "Insertion codes, specifying the order of residues inserted between existing residues",
                            "labeled": "Optional list of residue ids that have labels. Must be present if `labels` is present.\n\nWARN: Deprecated."
                          }
                        },
                        "k": "record",
                        "t": {
                          "residues": {
                            "k": "array",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "alias",
                                "t": "u32"
                              }
                            }
                          },
                          "labels": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "array",
                                "t": "string"
                              }
                            }
                          },
                          "labeled": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "alias",
                                "t": "u32"
                              }
                            }
                          },
                          "seq_ns": {
                            "k": "array",
                            "t": "i32"
                          },
                          "seqs": {
                            "k": "array",
                            "t": "string"
                          },
                          "insertion_codes": {
                            "k": "array",
                            "t": "string"
                          }
                        },
                        "n": "Residues"
                      }
                    }
                  },
                  "n": "Object"
                }
              ]
            }
          },
          {
            "k": "array",
            "t": {
              "k": "record",
              "t": {
                "format": {
                  "k": "optional",
                  "t": {
                    "k": "enum",
                    "t": [
                      "json",
                      "bin"
                    ],
                    "n": "ObjectFormat"
                  }
                },
                "size": "u64",
                "path": {
                  "k": "@",
                  "t": {
                    "k": "array",
                    "t": {
                      "doc": {
                        "fields": {}
                      },
                      "k": "record",
                      "t": {
                        "topology": {
                          "doc": {
                            "fields": {
                              "fragment_multiplicities": "Optional list of the multiplicity of each fragment. This is only\nrelevant for open-shell systems. If present, then it must be the same\nlength as `fragments`.",
                              "connectivity": "Optional list of bonds. Because bonds are perceived, this list should\nnot be considered a reliable source of bond information.",
                              "partial_charges": "Optional list of the partial charge of each atom. If present, then it\nmust be the same length as `symbols`.",
                              "velocities": "Contains the x, y, z components of initial atom velocities in Angstroms/ps\nV1 only",
                              "geometry": "XYZ coordinates of each atom. It must be 3 times the length of\n`symbols`.",
                              "symbols": "Element of each atom.",
                              "fragment_partial_charges": "Optional list of the formal charge of each fragment. If present, then it\nmust be the same length as `fragments`.",
                              "labels": "Optional list of the label of each atom. Often this is used for\nlabelling specific atoms within residues (e.g. alpha carbons). If\npresent, then it must be the same length as `symbols`.",
                              "fragment_formal_charges": "Optional list of the formal charge of each fragment. If present, then it\nmust be the same length as `fragments`.",
                              "fragments": "Optional list of fragments. If present, then all atoms must be in\nexactly one fragment.",
                              "formal_charges": "Optional list of the formal charge of each atom. If present, then it\nmust be the same length as `symbols`."
                            }
                          },
                          "k": "record",
                          "t": {
                            "symbols": {
                              "k": "array",
                              "t": {
                                "k": "enum",
                                "t": [
                                  {
                                    "H": 1
                                  },
                                  "He",
                                  "Li",
                                  "Be",
                                  "B",
                                  "C",
                                  "N",
                                  "O",
                                  "F",
                                  "Ne",
                                  "Na",
                                  "Mg",
                                  "Al",
                                  "Si",
                                  "P",
                                  "S",
                                  "Cl",
                                  "Ar",
                                  "K",
                                  "Ca",
                                  "Sc",
                                  "Ti",
                                  "V",
                                  "Cr",
                                  "Mn",
                                  "Fe",
                                  "Co",
                                  "Ni",
                                  "Cu",
                                  "Zn",
                                  "Ga",
                                  "Ge",
                                  "As",
                                  "Se",
                                  "Br",
                                  "Kr",
                                  "Rb",
                                  "Sr",
                                  "Y",
                                  "Zr",
                                  "Nb",
                                  "Mo",
                                  "Tc",
                                  "Ru",
                                  "Rh",
                                  "Pd",
                                  "Ag",
                                  "Cd",
                                  "In",
                                  "Sn",
                                  "Sb",
                                  "Te",
                                  "I",
                                  "Xe",
                                  "Cs",
                                  "Ba",
                                  "La",
                                  "Ce",
                                  "Pr",
                                  "Nd",
                                  "Pm",
                                  "Sm",
                                  "Eu",
                                  "Gd",
                                  "Tb",
                                  "Dy",
                                  "Ho",
                                  "Er",
                                  "Tm",
                                  "Yb",
                                  "Lu",
                                  "Hf",
                                  "Ta",
                                  "W",
                                  "Re",
                                  "Os",
                                  "Ir",
                                  "Pt",
                                  "Au",
                                  "Hg",
                                  "Tl",
                                  "Pb",
                                  "Bi",
                                  "Po",
                                  "At",
                                  "Rn",
                                  "Fr",
                                  "Ra",
                                  "Ac",
                                  "Th",
                                  "Pa",
                                  "U",
                                  "Np",
                                  "Pu",
                                  "Am",
                                  "Cm",
                                  "Bk",
                                  "Cf",
                                  "Es",
                                  "Fm",
                                  "Md",
                                  "No",
                                  "Lr",
                                  "Rf",
                                  "Db",
                                  "Sg",
                                  "Bh",
                                  "Hs",
                                  "Mt",
                                  "Ds",
                                  "Rg",
                                  "Cn",
                                  "Nh",
                                  "Fl",
                                  "Mc",
                                  "Lv",
                                  "Ts",
                                  "Og"
                                ],
                                "n": "Element"
                              }
                            },
                            "connectivity": {
                              "k": "optional",
                              "t": {
                                "k": "array",
                                "t": {
                                  "k": "alias",
                                  "t": {
                                    "k": "tuple",
                                    "t": [
                                      {
                                        "k": "alias",
                                        "t": "u32"
                                      },
                                      {
                                        "k": "alias",
                                        "t": "u32"
                                      },
                                      {
                                        "k": "enum",
                                        "t": [
                                          {
                                            "Unspecified": 0
                                          },
                                          {
                                            "Single": 1
                                          },
                                          {
                                            "Double": 2
                                          },
                                          {
                                            "Triple": 3
                                          },
                                          {
                                            "Quadriple": 4
                                          },
                                          {
                                            "Quintuple": 5
                                          },
                                          {
                                            "Sextuple": 6
                                          },
                                          {
                                            "FiveAndAHalf": 250
                                          },
                                          {
                                            "FourAndAHalf": 251
                                          },
                                          {
                                            "ThreeAndAHalf": 252
                                          },
                                          {
                                            "TwoAndAHalf": 253
                                          },
                                          {
                                            "OneAndAHalf": 254
                                          },
                                          {
                                            "Ring": 255
                                          }
                                        ],
                                        "n": "BondOrder"
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "fragment_formal_charges": {
                              "k": "optional",
                              "t": {
                                "k": "array",
                                "t": {
                                  "k": "alias",
                                  "t": "i32"
                                }
                              }
                            },
                            "formal_charges": {
                              "k": "optional",
                              "t": {
                                "k": "array",
                                "t": {
                                  "k": "alias",
                                  "t": "i32"
                                }
                              }
                            },
                            "labels": {
                              "k": "optional",
                              "t": {
                                "k": "array",
                                "t": "string"
                              }
                            },
                            "partial_charges": {
                              "k": "optional",
                              "t": {
                                "k": "array",
                                "t": {
                                  "k": "alias",
                                  "t": "f32"
                                }
                              }
                            },
                            "geometry": {
                              "k": "array",
                              "t": "f32"
                            },
                            "fragment_multiplicities": {
                              "k": "optional",
                              "t": {
                                "k": "array",
                                "t": {
                                  "k": "alias",
                                  "t": "u8"
                                }
                              }
                            },
                            "fragment_partial_charges": {
                              "k": "optional",
                              "t": {
                                "k": "array",
                                "t": {
                                  "k": "alias",
                                  "t": "f32"
                                }
                              }
                            },
                            "velocities": {
                              "k": "optional",
                              "t": {
                                "k": "array",
                                "t": "f32"
                              }
                            },
                            "fragments": {
                              "k": "optional",
                              "t": {
                                "k": "array",
                                "t": {
                                  "k": "array",
                                  "t": {
                                    "k": "alias",
                                    "t": "u32"
                                  }
                                }
                              }
                            },
                            "schema_version": {
                              "k": "alias",
                              "t": "string"
                            }
                          },
                          "n": "Topology"
                        },
                        "residues": {
                          "doc": {
                            "fields": {
                              "residues": "List of residues",
                              "labels": "Optional list of residue labels. Any given residue may have multiple labels. `labels[i]`\ncorresponds to residue with id `labeled[i]`. Must be present if `labeled` is present.\n\nWARN: Deprecated.",
                              "labeled": "Optional list of residue ids that have labels. Must be present if `labels` is present.\n\nWARN: Deprecated.",
                              "seqs": "Sequence names, e.g. amino acid or nucleotide names",
                              "seq_ns": "Sequence numbers, identigfying the position of the residue in the sequence",
                              "insertion_codes": "Insertion codes, specifying the order of residues inserted between existing residues"
                            }
                          },
                          "k": "record",
                          "t": {
                            "seqs": {
                              "k": "array",
                              "t": "string"
                            },
                            "labeled": {
                              "k": "optional",
                              "t": {
                                "k": "array",
                                "t": {
                                  "k": "alias",
                                  "t": "u32"
                                }
                              }
                            },
                            "insertion_codes": {
                              "k": "array",
                              "t": "string"
                            },
                            "residues": {
                              "k": "array",
                              "t": {
                                "k": "array",
                                "t": {
                                  "k": "alias",
                                  "t": "u32"
                                }
                              }
                            },
                            "seq_ns": {
                              "k": "array",
                              "t": "i32"
                            },
                            "labels": {
                              "k": "optional",
                              "t": {
                                "k": "array",
                                "t": {
                                  "k": "array",
                                  "t": "string"
                                }
                              }
                            }
                          },
                          "n": "Residues"
                        }
                      },
                      "n": "TR"
                    }
                  }
                }
              },
              "n": "Object"
            }
          }
        ]
      }
    },
    {
      "node": {
        "name": "p2rank",
        "description": "\nRun P2Rank on an input PDB file to obtain ligand-binding site predictions\n\nPlease see:\nKrivak R, Hoksza D. P2Rank: machine learning based tool for rapid and accurate prediction of ligand binding sites from protein structure. \nJournal of Cheminformatics. 2018 Aug.\n",
        "ins": [
          {
            "k": "record",
            "t": {
              "path": {
                "k": "@",
                "t": {
                  "doc": {
                    "fields": {
                      "amino_acid_seq_ids": "The sequence index of each amino acid relative to its parent gene. This\nis useful because structures often do not represent an entire protein,\nand it is desirable to map each amino acid to its position in the entire\nsequence (this is how most amino acids are referenced in literature).",
                      "subunits": "Subunits are used to identify substructures within the topology. For\nexample, distinct monomers, side-chains, peptides, proteins, small\nmolecules, and so on. Each element defines a chain which is itself a\nvector of indices into the topology that identify which atoms are part\nof the chain.",
                      "amino_acid_labels": "General purpose labels for the amino acids. For example, it can be used\nto capture the references used by PDB files for identifying insertion\ncodes.",
                      "residues": "Residues that are not amino acids.",
                      "amino_acids": "Each element defines an amino acid which is itself a vector of indices\ninto the topology that identify which atoms are part of the amino acid.",
                      "amino_acid_seq": "The amino acid sequence."
                    }
                  },
                  "k": "record",
                  "t": {
                    "amino_acid_labels": {
                      "k": "optional",
                      "t": {
                        "k": "array",
                        "t": {
                          "k": "record",
                          "t": [
                            "u32",
                            "string"
                          ],
                          "n": "Label"
                        }
                      }
                    },
                    "pockets": {
                      "k": "optional",
                      "t": {
                        "k": "array",
                        "t": {
                          "doc": {
                            "fields": {}
                          },
                          "k": "record",
                          "t": {
                            "beta_cluster": {
                              "k": "array",
                              "t": {
                                "doc": {
                                  "fields": {}
                                },
                                "k": "record",
                                "t": {
                                  "score": {
                                    "k": "optional",
                                    "t": "f32"
                                  },
                                  "probe_type": {
                                    "k": "optional",
                                    "t": {
                                      "k": "enum",
                                      "t": [
                                        "H",
                                        "He",
                                        "Li",
                                        "Be",
                                        "B",
                                        "C",
                                        "N",
                                        "O",
                                        "F",
                                        "Ne",
                                        "Na",
                                        "Mg",
                                        "Al",
                                        "Si",
                                        "P",
                                        "S",
                                        "Cl",
                                        "Ar",
                                        "K",
                                        "Ca",
                                        "Sc",
                                        "Ti",
                                        "V",
                                        "Cr",
                                        "Mn",
                                        "Fe",
                                        "Co",
                                        "Ni",
                                        "Cu",
                                        "Zn",
                                        "Ga",
                                        "Ge",
                                        "As",
                                        "Se",
                                        "Br",
                                        "Kr",
                                        "Rb",
                                        "Sr",
                                        "Y",
                                        "Zr",
                                        "Nb",
                                        "Mo",
                                        "Tc",
                                        "Ru",
                                        "Rh",
                                        "Pd",
                                        "Ag",
                                        "Cd",
                                        "In",
                                        "Sn",
                                        "Sb",
                                        "Te",
                                        "I",
                                        "Xe",
                                        "Cs",
                                        "Ba",
                                        "La",
                                        "Ce",
                                        "Pr",
                                        "Nd",
                                        "Pm",
                                        "Sm",
                                        "Eu",
                                        "Gd",
                                        "Tb",
                                        "Dy",
                                        "Ho",
                                        "Er",
                                        "Tm",
                                        "Yb",
                                        "Lu",
                                        "Hf",
                                        "Ta",
                                        "W",
                                        "Re",
                                        "Os",
                                        "Ir",
                                        "Pt",
                                        "Au",
                                        "Hg",
                                        "Tl",
                                        "Pb",
                                        "Bi",
                                        "Po",
                                        "At",
                                        "Rn",
                                        "Fr",
                                        "Ra",
                                        "Ac",
                                        "Th",
                                        "Pa",
                                        "U",
                                        "Np",
                                        "Pu",
                                        "Am",
                                        "Cm",
                                        "Bk",
                                        "Cf",
                                        "Es",
                                        "Fm",
                                        "Md",
                                        "No",
                                        "Lr",
                                        "Rf",
                                        "Db",
                                        "Sg",
                                        "Bh",
                                        "Hs",
                                        "Mt",
                                        "Ds",
                                        "Rg",
                                        "Cn",
                                        "Nh",
                                        "Fl",
                                        "Mc",
                                        "Lv",
                                        "Ts",
                                        "Og"
                                      ],
                                      "n": "Element"
                                    }
                                  },
                                  "coord": {
                                    "k": "array",
                                    "t": "f32"
                                  },
                                  "occupied": "bool"
                                },
                                "n": "PocketBetaAtom"
                              }
                            },
                            "lining_atoms": {
                              "k": "array",
                              "t": {
                                "doc": {
                                  "fields": {}
                                },
                                "k": "record",
                                "t": {
                                  "amino_acid_seq_id": "i32",
                                  "label": "string"
                                },
                                "n": "LiningAtomIdentifier"
                              }
                            },
                            "centroid": {
                              "k": "array",
                              "t": "f32"
                            },
                            "score": "f32",
                            "alpha_cluster": {
                              "k": "array",
                              "t": {
                                "doc": {
                                  "fields": {}
                                },
                                "k": "record",
                                "t": {
                                  "score": "f32",
                                  "occupied": "bool",
                                  "coord": {
                                    "k": "array",
                                    "t": "f32"
                                  }
                                },
                                "n": "PocketAlphaAtom"
                              }
                            }
                          },
                          "n": "Pocket"
                        }
                      }
                    },
                    "subunits": {
                      "k": "optional",
                      "t": {
                        "k": "array",
                        "t": {
                          "k": "array",
                          "t": "u32"
                        }
                      }
                    },
                    "amino_acids": {
                      "k": "optional",
                      "t": {
                        "k": "array",
                        "t": {
                          "k": "array",
                          "t": "u32"
                        }
                      }
                    },
                    "residue_insertion_codes": {
                      "k": "optional",
                      "t": {
                        "k": "array",
                        "t": "string"
                      }
                    },
                    "residues": {
                      "k": "optional",
                      "t": {
                        "k": "array",
                        "t": {
                          "k": "array",
                          "t": "u32"
                        }
                      }
                    },
                    "binding_site_interactions": {
                      "k": "optional",
                      "t": {
                        "k": "array",
                        "t": {
                          "doc": {
                            "fields": {}
                          },
                          "k": "record",
                          "t": {
                            "receptor_xyz": {
                              "k": "optional",
                              "t": {
                                "k": "array",
                                "t": "f32"
                              }
                            },
                            "pi_stack_kind": {
                              "k": "optional",
                              "t": {
                                "k": "enum",
                                "t": [
                                  "P",
                                  "T"
                                ],
                                "n": "PiStackKind"
                              }
                            },
                            "receptor_atom_idx": {
                              "k": "optional",
                              "t": "u32"
                            },
                            "receptor_is_donor": "bool",
                            "kind": {
                              "k": "enum",
                              "t": [
                                "Unknown",
                                "Hydrophobic",
                                "HydrogenBond",
                                "HalogenBond",
                                "WaterBridge",
                                "SaltBridge",
                                "PiStack",
                                "PiCation",
                                "MetalComplex"
                              ],
                              "n": "BindingSiteInteractionKind"
                            },
                            "receptor_is_charged": "bool",
                            "receptor_amino_acid_idx": "u32",
                            "ligand_atom_idx": {
                              "k": "optional",
                              "t": "u32"
                            },
                            "receptor_is_positively_charged": "bool",
                            "ligand_residue_idx": "u32",
                            "ligand_xyz": {
                              "k": "optional",
                              "t": {
                                "k": "array",
                                "t": "f32"
                              }
                            }
                          },
                          "n": "BindingSiteInteraction"
                        }
                      }
                    },
                    "amino_acid_seq": {
                      "k": "optional",
                      "t": {
                        "k": "array",
                        "t": {
                          "k": "enum",
                          "t": [
                            "GLY",
                            "ALA",
                            "VAL",
                            "LEU",
                            "ILE",
                            "PRO",
                            "SER",
                            "THR",
                            "ASN",
                            "GLN",
                            "CYS",
                            "CYD",
                            "CYX",
                            "MET",
                            "PHE",
                            "TYR",
                            "TYD",
                            "TRP",
                            "ASP",
                            "ASH",
                            "GLU",
                            "GLH",
                            "HIS",
                            "HIN",
                            "HID",
                            "HIE",
                            "HIP",
                            "LYS",
                            "LYD",
                            "LYN",
                            "ARG",
                            "HYP",
                            "ACE",
                            "NME",
                            "NMA",
                            "UNK"
                          ],
                          "n": "AminoAcid"
                        }
                      }
                    },
                    "amino_acid_insertion_codes": {
                      "k": "optional",
                      "t": {
                        "k": "array",
                        "t": "string"
                      }
                    },
                    "amino_acid_seq_ids": {
                      "k": "optional",
                      "t": {
                        "k": "array",
                        "t": "i32"
                      }
                    },
                    "residue_labels": {
                      "k": "optional",
                      "t": {
                        "k": "array",
                        "t": {
                          "k": "record",
                          "t": [
                            "u32",
                            "string"
                          ],
                          "n": "Label"
                        }
                      }
                    },
                    "residue_seq": {
                      "k": "optional",
                      "t": {
                        "k": "array",
                        "t": "string"
                      }
                    },
                    "topology": {
                      "doc": {
                        "fields": {
                          "velocities": "Contains the x, y, z components of initial atom velocities in Angstroms/ps\nV1 only",
                          "fragment_formal_charges": "A list of sums of all atom formal charges for each fragment\nV0 version was fragment_charges",
                          "fragment_charges": "DEPRECATED please upgrade to V1 and use fragment_formal_charges instead\nA list of sums of all atom formal charges for each fragment",
                          "fragment_partial_charges": "A list of sums of all atom partial charges for each fragment",
                          "labels": "Mapping of atoms to their label\nV0 version was atom_labels",
                          "partial_charges": "Contains the Mulliken partial charges for each of the atoms",
                          "connectivity": "Bonds between atoms",
                          "symbols": "Atomic symbols of elements",
                          "fragment_multiplicities": "A list of multiplicities for each fragment. Fragment multiplicity is a measure\nof the energy level of a fragment, and is related to the number of unpaired electrons within the fragment",
                          "atom_labels": "DEPRECATED please upgrade to V1 and use labels instead\nMapping of atoms to their label",
                          "fragments": "A list of fragments, where each fragment is a list of atom indices",
                          "geometry": "Flat vector of X,Y,Z coordinates for atoms in Angstroms",
                          "atom_charges": "DEPRECATED please upgrade to V1 and use formal_charges instead\nFormal charges for each atom",
                          "formal_charges": "Formal charges for each atom\nV0 version was atom_charges"
                        }
                      },
                      "k": "record",
                      "t": {
                        "symbols": {
                          "k": "array",
                          "t": {
                            "k": "enum",
                            "t": [
                              "H",
                              "He",
                              "Li",
                              "Be",
                              "B",
                              "C",
                              "N",
                              "O",
                              "F",
                              "Ne",
                              "Na",
                              "Mg",
                              "Al",
                              "Si",
                              "P",
                              "S",
                              "Cl",
                              "Ar",
                              "K",
                              "Ca",
                              "Sc",
                              "Ti",
                              "V",
                              "Cr",
                              "Mn",
                              "Fe",
                              "Co",
                              "Ni",
                              "Cu",
                              "Zn",
                              "Ga",
                              "Ge",
                              "As",
                              "Se",
                              "Br",
                              "Kr",
                              "Rb",
                              "Sr",
                              "Y",
                              "Zr",
                              "Nb",
                              "Mo",
                              "Tc",
                              "Ru",
                              "Rh",
                              "Pd",
                              "Ag",
                              "Cd",
                              "In",
                              "Sn",
                              "Sb",
                              "Te",
                              "I",
                              "Xe",
                              "Cs",
                              "Ba",
                              "La",
                              "Ce",
                              "Pr",
                              "Nd",
                              "Pm",
                              "Sm",
                              "Eu",
                              "Gd",
                              "Tb",
                              "Dy",
                              "Ho",
                              "Er",
                              "Tm",
                              "Yb",
                              "Lu",
                              "Hf",
                              "Ta",
                              "W",
                              "Re",
                              "Os",
                              "Ir",
                              "Pt",
                              "Au",
                              "Hg",
                              "Tl",
                              "Pb",
                              "Bi",
                              "Po",
                              "At",
                              "Rn",
                              "Fr",
                              "Ra",
                              "Ac",
                              "Th",
                              "Pa",
                              "U",
                              "Np",
                              "Pu",
                              "Am",
                              "Cm",
                              "Bk",
                              "Cf",
                              "Es",
                              "Fm",
                              "Md",
                              "No",
                              "Lr",
                              "Rf",
                              "Db",
                              "Sg",
                              "Bh",
                              "Hs",
                              "Mt",
                              "Ds",
                              "Rg",
                              "Cn",
                              "Nh",
                              "Fl",
                              "Mc",
                              "Lv",
                              "Ts",
                              "Og"
                            ],
                            "n": "Element"
                          }
                        },
                        "connectivity": {
                          "k": "optional",
                          "t": {
                            "k": "array",
                            "t": {
                              "k": "record",
                              "t": [
                                "u32",
                                "u32",
                                "u8"
                              ],
                              "n": "Bond"
                            }
                          }
                        },
                        "fragment_formal_charges": {
                          "k": "optional",
                          "t": {
                            "k": "array",
                            "t": "i8"
                          }
                        },
                        "velocities": {
                          "k": "optional",
                          "t": {
                            "k": "array",
                            "t": "f32"
                          }
                        },
                        "version": {
                          "k": "optional",
                          "t": {
                            "k": "enum",
                            "t": [
                              "V0",
                              "V1"
                            ],
                            "n": "TopologyVersion"
                          }
                        },
                        "atom_labels": {
                          "k": "optional",
                          "t": {
                            "k": "array",
                            "t": "string"
                          }
                        },
                        "atom_charges": {
                          "k": "optional",
                          "t": {
                            "k": "array",
                            "t": "i8"
                          }
                        },
                        "formal_charges": {
                          "k": "optional",
                          "t": {
                            "k": "array",
                            "t": "i8"
                          }
                        },
                        "alts": {
                          "k": "optional",
                          "t": {
                            "k": "array",
                            "t": {
                              "k": "record",
                              "t": [
                                "u32",
                                {
                                  "k": "array",
                                  "t": "u32"
                                }
                              ],
                              "n": "Alt"
                            }
                          }
                        },
                        "fragments": {
                          "k": "optional",
                          "t": {
                            "k": "array",
                            "t": {
                              "k": "array",
                              "t": "u32"
                            }
                          }
                        },
                        "fragment_charges": {
                          "k": "optional",
                          "t": {
                            "k": "array",
                            "t": "i8"
                          }
                        },
                        "fragment_multiplicities": {
                          "k": "optional",
                          "t": {
                            "k": "array",
                            "t": "i8"
                          }
                        },
                        "labels": {
                          "k": "optional",
                          "t": {
                            "k": "array",
                            "t": "string"
                          }
                        },
                        "partial_charges": {
                          "k": "optional",
                          "t": {
                            "k": "array",
                            "t": "f32"
                          }
                        },
                        "fragment_partial_charges": {
                          "k": "optional",
                          "t": {
                            "k": "array",
                            "t": "f32"
                          }
                        },
                        "geometry": {
                          "k": "array",
                          "t": "f32"
                        }
                      },
                      "n": "Topology"
                    },
                    "residue_seq_ids": {
                      "k": "optional",
                      "t": {
                        "k": "array",
                        "t": "i32"
                      }
                    }
                  },
                  "n": "Conformer"
                }
              },
              "format": {
                "k": "optional",
                "t": {
                  "k": "enum",
                  "t": [
                    "json",
                    "bin"
                  ],
                  "n": "ObjectFormat"
                }
              },
              "size": "u32"
            },
            "n": "Object"
          },
          "bool"
        ]
      }
    },
    {
      "node": {
        "name": "rxdock_rex",
        "description": "\nRun rxdock with protein, ligand, and parameter file\n",
        "ins": [
          {
            "doc": {
              "fields": {
                "ligand_options": "Ligand options",
                "radius": "Radius of cavity mapping region (in Angstroms). Defaults to 10.",
                "n_runs": "Number of docking attempts per ligand. Defaults to 1.",
                "small_sphere": "Radius of small probe (in Angstroms). Defaults to 1.",
                "min_volume": "Minimum cavity volume to accept (in Angstroms, not grid points). Defaults to 100."
              }
            },
            "k": "record",
            "t": {
              "n_runs": {
                "k": "optional",
                "t": "u32"
              },
              "radius": {
                "k": "optional",
                "t": "f32"
              },
              "small_sphere": {
                "k": "optional",
                "t": "f32"
              },
              "min_volume": {
                "k": "optional",
                "t": "f32"
              },
              "ligand_options": {
                "k": "optional",
                "t": {
                  "doc": {
                    "fields": {}
                  },
                  "k": "record",
                  "t": {
                    "dihedral_mode": {
                      "k": "optional",
                      "t": {
                        "k": "enum",
                        "t": [
                          "FIXED",
                          "TETHERED",
                          "FREE"
                        ],
                        "n": "LigandMode"
                      }
                    },
                    "max_dihedral": {
                      "k": "optional",
                      "t": "f32"
                    },
                    "trans_mode": {
                      "k": "optional",
                      "t": {
                        "k": "enum",
                        "t": [
                          "FIXED",
                          "TETHERED",
                          "FREE"
                        ],
                        "n": "LigandMode"
                      }
                    },
                    "rot_mode": {
                      "k": "optional",
                      "t": {
                        "k": "enum",
                        "t": [
                          "FIXED",
                          "TETHERED",
                          "FREE"
                        ],
                        "n": "LigandMode"
                      }
                    },
                    "max_rot": {
                      "k": "optional",
                      "t": "f32"
                    },
                    "max_trans": {
                      "k": "optional",
                      "t": "f32"
                    }
                  },
                  "n": "LigandOptions"
                }
              }
            },
            "n": "RxdockOptions"
          },
          {
            "k": "tuple",
            "t": [
              {
                "k": "record",
                "t": {
                  "size": "u64",
                  "format": {
                    "k": "optional",
                    "t": {
                      "k": "enum",
                      "t": [
                        "json",
                        "bin"
                      ],
                      "n": "ObjectFormat"
                    }
                  },
                  "path": {
                    "k": "@",
                    "t": {
                      "doc": {
                        "fields": {
                          "geometry": "XYZ coordinates of each atom. It must be 3 times the length of\n`symbols`.",
                          "velocities": "Contains the x, y, z components of initial atom velocities in Angstroms/ps\nV1 only",
                          "symbols": "Element of each atom.",
                          "fragments": "Optional list of fragments. If present, then all atoms must be in\nexactly one fragment.",
                          "partial_charges": "Optional list of the partial charge of each atom. If present, then it\nmust be the same length as `symbols`.",
                          "fragment_partial_charges": "Optional list of the formal charge of each fragment. If present, then it\nmust be the same length as `fragments`.",
                          "labels": "Optional list of the label of each atom. Often this is used for\nlabelling specific atoms within residues (e.g. alpha carbons). If\npresent, then it must be the same length as `symbols`.",
                          "connectivity": "Optional list of bonds. Because bonds are perceived, this list should\nnot be considered a reliable source of bond information.",
                          "fragment_formal_charges": "Optional list of the formal charge of each fragment. If present, then it\nmust be the same length as `fragments`.",
                          "formal_charges": "Optional list of the formal charge of each atom. If present, then it\nmust be the same length as `symbols`.",
                          "fragment_multiplicities": "Optional list of the multiplicity of each fragment. This is only\nrelevant for open-shell systems. If present, then it must be the same\nlength as `fragments`."
                        }
                      },
                      "k": "record",
                      "t": {
                        "fragments": {
                          "k": "optional",
                          "t": {
                            "k": "array",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "alias",
                                "t": "u32"
                              }
                            }
                          }
                        },
                        "fragment_partial_charges": {
                          "k": "optional",
                          "t": {
                            "k": "array",
                            "t": {
                              "k": "alias",
                              "t": "f32"
                            }
                          }
                        },
                        "connectivity": {
                          "k": "optional",
                          "t": {
                            "k": "array",
                            "t": {
                              "k": "alias",
                              "t": {
                                "k": "tuple",
                                "t": [
                                  {
                                    "k": "alias",
                                    "t": "u32"
                                  },
                                  {
                                    "k": "alias",
                                    "t": "u32"
                                  },
                                  {
                                    "k": "enum",
                                    "t": [
                                      {
                                        "Unspecified": 0
                                      },
                                      {
                                        "Single": 1
                                      },
                                      {
                                        "Double": 2
                                      },
                                      {
                                        "Triple": 3
                                      },
                                      {
                                        "Quadriple": 4
                                      },
                                      {
                                        "Quintuple": 5
                                      },
                                      {
                                        "Sextuple": 6
                                      },
                                      {
                                        "FiveAndAHalf": 250
                                      },
                                      {
                                        "FourAndAHalf": 251
                                      },
                                      {
                                        "ThreeAndAHalf": 252
                                      },
                                      {
                                        "TwoAndAHalf": 253
                                      },
                                      {
                                        "OneAndAHalf": 254
                                      },
                                      {
                                        "Ring": 255
                                      }
                                    ],
                                    "n": "BondOrder"
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "partial_charges": {
                          "k": "optional",
                          "t": {
                            "k": "array",
                            "t": {
                              "k": "alias",
                              "t": "f32"
                            }
                          }
                        },
                        "fragment_multiplicities": {
                          "k": "optional",
                          "t": {
                            "k": "array",
                            "t": {
                              "k": "alias",
                              "t": "u8"
                            }
                          }
                        },
                        "labels": {
                          "k": "optional",
                          "t": {
                            "k": "array",
                            "t": "string"
                          }
                        },
                        "fragment_formal_charges": {
                          "k": "optional",
                          "t": {
                            "k": "array",
                            "t": {
                              "k": "alias",
                              "t": "i32"
                            }
                          }
                        },
                        "schema_version": {
                          "k": "alias",
                          "t": "string"
                        },
                        "velocities": {
                          "k": "optional",
                          "t": {
                            "k": "array",
                            "t": "f32"
                          }
                        },
                        "geometry": {
                          "k": "array",
                          "t": "f32"
                        },
                        "symbols": {
                          "k": "array",
                          "t": {
                            "k": "enum",
                            "t": [
                              {
                                "H": 1
                              },
                              "He",
                              "Li",
                              "Be",
                              "B",
                              "C",
                              "N",
                              "O",
                              "F",
                              "Ne",
                              "Na",
                              "Mg",
                              "Al",
                              "Si",
                              "P",
                              "S",
                              "Cl",
                              "Ar",
                              "K",
                              "Ca",
                              "Sc",
                              "Ti",
                              "V",
                              "Cr",
                              "Mn",
                              "Fe",
                              "Co",
                              "Ni",
                              "Cu",
                              "Zn",
                              "Ga",
                              "Ge",
                              "As",
                              "Se",
                              "Br",
                              "Kr",
                              "Rb",
                              "Sr",
                              "Y",
                              "Zr",
                              "Nb",
                              "Mo",
                              "Tc",
                              "Ru",
                              "Rh",
                              "Pd",
                              "Ag",
                              "Cd",
                              "In",
                              "Sn",
                              "Sb",
                              "Te",
                              "I",
                              "Xe",
                              "Cs",
                              "Ba",
                              "La",
                              "Ce",
                              "Pr",
                              "Nd",
                              "Pm",
                              "Sm",
                              "Eu",
                              "Gd",
                              "Tb",
                              "Dy",
                              "Ho",
                              "Er",
                              "Tm",
                              "Yb",
                              "Lu",
                              "Hf",
                              "Ta",
                              "W",
                              "Re",
                              "Os",
                              "Ir",
                              "Pt",
                              "Au",
                              "Hg",
                              "Tl",
                              "Pb",
                              "Bi",
                              "Po",
                              "At",
                              "Rn",
                              "Fr",
                              "Ra",
                              "Ac",
                              "Th",
                              "Pa",
                              "U",
                              "Np",
                              "Pu",
                              "Am",
                              "Cm",
                              "Bk",
                              "Cf",
                              "Es",
                              "Fm",
                              "Md",
                              "No",
                              "Lr",
                              "Rf",
                              "Db",
                              "Sg",
                              "Bh",
                              "Hs",
                              "Mt",
                              "Ds",
                              "Rg",
                              "Cn",
                              "Nh",
                              "Fl",
                              "Mc",
                              "Lv",
                              "Ts",
                              "Og"
                            ],
                            "n": "Element"
                          }
                        },
                        "formal_charges": {
                          "k": "optional",
                          "t": {
                            "k": "array",
                            "t": {
                              "k": "alias",
                              "t": "i32"
                            }
                          }
                        }
                      },
                      "n": "Topology"
                    }
                  }
                },
                "n": "Object"
              },
              {
                "k": "record",
                "t": {
                  "size": "u64",
                  "format": {
                    "k": "optional",
                    "t": {
                      "k": "enum",
                      "t": [
                        "json",
                        "bin"
                      ],
                      "n": "ObjectFormat"
                    }
                  },
                  "path": {
                    "k": "@",
                    "t": {
                      "doc": {
                        "fields": {
                          "labeled": "Optional list of residue ids that have labels. Must be present if `labels` is present.\n\nWARN: Deprecated.",
                          "seq_ns": "Sequence numbers, identigfying the position of the residue in the sequence",
                          "labels": "Optional list of residue labels. Any given residue may have multiple labels. `labels[i]`\ncorresponds to residue with id `labeled[i]`. Must be present if `labeled` is present.\n\nWARN: Deprecated.",
                          "residues": "List of residues",
                          "seqs": "Sequence names, e.g. amino acid or nucleotide names",
                          "insertion_codes": "Insertion codes, specifying the order of residues inserted between existing residues"
                        }
                      },
                      "k": "record",
                      "t": {
                        "labeled": {
                          "k": "optional",
                          "t": {
                            "k": "array",
                            "t": {
                              "k": "alias",
                              "t": "u32"
                            }
                          }
                        },
                        "seq_ns": {
                          "k": "array",
                          "t": "i32"
                        },
                        "residues": {
                          "k": "array",
                          "t": {
                            "k": "array",
                            "t": {
                              "k": "alias",
                              "t": "u32"
                            }
                          }
                        },
                        "insertion_codes": {
                          "k": "array",
                          "t": "string"
                        },
                        "labels": {
                          "k": "optional",
                          "t": {
                            "k": "array",
                            "t": {
                              "k": "array",
                              "t": "string"
                            }
                          }
                        },
                        "seqs": {
                          "k": "array",
                          "t": "string"
                        }
                      },
                      "n": "Residues"
                    }
                  }
                },
                "n": "Object"
              },
              {
                "k": "record",
                "t": {
                  "path": {
                    "k": "@",
                    "t": {
                      "doc": {
                        "fields": {
                          "labeled": "WARN: Deprecated.",
                          "labels": "WARN: Deprecated."
                        }
                      },
                      "k": "record",
                      "t": {
                        "labeled": {
                          "k": "optional",
                          "t": {
                            "k": "array",
                            "t": {
                              "k": "alias",
                              "t": "u32"
                            }
                          }
                        },
                        "labels": {
                          "k": "optional",
                          "t": {
                            "k": "array",
                            "t": {
                              "k": "array",
                              "t": "string"
                            }
                          }
                        },
                        "chains": {
                          "k": "array",
                          "t": {
                            "k": "array",
                            "t": {
                              "k": "alias",
                              "t": "u32"
                            }
                          }
                        }
                      },
                      "n": "Chains"
                    }
                  },
                  "size": "u64",
                  "format": {
                    "k": "optional",
                    "t": {
                      "k": "enum",
                      "t": [
                        "json",
                        "bin"
                      ],
                      "n": "ObjectFormat"
                    }
                  }
                },
                "n": "Object"
              }
            ]
          },
          {
            "k": "array",
            "t": {
              "k": "tuple",
              "t": [
                {
                  "k": "record",
                  "t": {
                    "size": "u64",
                    "format": {
                      "k": "optional",
                      "t": {
                        "k": "enum",
                        "t": [
                          "json",
                          "bin"
                        ],
                        "n": "ObjectFormat"
                      }
                    },
                    "path": {
                      "k": "@",
                      "t": {
                        "doc": {
                          "fields": {
                            "fragment_formal_charges": "Optional list of the formal charge of each fragment. If present, then it\nmust be the same length as `fragments`.",
                            "formal_charges": "Optional list of the formal charge of each atom. If present, then it\nmust be the same length as `symbols`.",
                            "symbols": "Element of each atom.",
                            "velocities": "Contains the x, y, z components of initial atom velocities in Angstroms/ps\nV1 only",
                            "connectivity": "Optional list of bonds. Because bonds are perceived, this list should\nnot be considered a reliable source of bond information.",
                            "fragment_multiplicities": "Optional list of the multiplicity of each fragment. This is only\nrelevant for open-shell systems. If present, then it must be the same\nlength as `fragments`.",
                            "labels": "Optional list of the label of each atom. Often this is used for\nlabelling specific atoms within residues (e.g. alpha carbons). If\npresent, then it must be the same length as `symbols`.",
                            "geometry": "XYZ coordinates of each atom. It must be 3 times the length of\n`symbols`.",
                            "partial_charges": "Optional list of the partial charge of each atom. If present, then it\nmust be the same length as `symbols`.",
                            "fragment_partial_charges": "Optional list of the formal charge of each fragment. If present, then it\nmust be the same length as `fragments`.",
                            "fragments": "Optional list of fragments. If present, then all atoms must be in\nexactly one fragment."
                          }
                        },
                        "k": "record",
                        "t": {
                          "symbols": {
                            "k": "array",
                            "t": {
                              "k": "enum",
                              "t": [
                                {
                                  "H": 1
                                },
                                "He",
                                "Li",
                                "Be",
                                "B",
                                "C",
                                "N",
                                "O",
                                "F",
                                "Ne",
                                "Na",
                                "Mg",
                                "Al",
                                "Si",
                                "P",
                                "S",
                                "Cl",
                                "Ar",
                                "K",
                                "Ca",
                                "Sc",
                                "Ti",
                                "V",
                                "Cr",
                                "Mn",
                                "Fe",
                                "Co",
                                "Ni",
                                "Cu",
                                "Zn",
                                "Ga",
                                "Ge",
                                "As",
                                "Se",
                                "Br",
                                "Kr",
                                "Rb",
                                "Sr",
                                "Y",
                                "Zr",
                                "Nb",
                                "Mo",
                                "Tc",
                                "Ru",
                                "Rh",
                                "Pd",
                                "Ag",
                                "Cd",
                                "In",
                                "Sn",
                                "Sb",
                                "Te",
                                "I",
                                "Xe",
                                "Cs",
                                "Ba",
                                "La",
                                "Ce",
                                "Pr",
                                "Nd",
                                "Pm",
                                "Sm",
                                "Eu",
                                "Gd",
                                "Tb",
                                "Dy",
                                "Ho",
                                "Er",
                                "Tm",
                                "Yb",
                                "Lu",
                                "Hf",
                                "Ta",
                                "W",
                                "Re",
                                "Os",
                                "Ir",
                                "Pt",
                                "Au",
                                "Hg",
                                "Tl",
                                "Pb",
                                "Bi",
                                "Po",
                                "At",
                                "Rn",
                                "Fr",
                                "Ra",
                                "Ac",
                                "Th",
                                "Pa",
                                "U",
                                "Np",
                                "Pu",
                                "Am",
                                "Cm",
                                "Bk",
                                "Cf",
                                "Es",
                                "Fm",
                                "Md",
                                "No",
                                "Lr",
                                "Rf",
                                "Db",
                                "Sg",
                                "Bh",
                                "Hs",
                                "Mt",
                                "Ds",
                                "Rg",
                                "Cn",
                                "Nh",
                                "Fl",
                                "Mc",
                                "Lv",
                                "Ts",
                                "Og"
                              ],
                              "n": "Element"
                            }
                          },
                          "connectivity": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "alias",
                                "t": {
                                  "k": "tuple",
                                  "t": [
                                    {
                                      "k": "alias",
                                      "t": "u32"
                                    },
                                    {
                                      "k": "alias",
                                      "t": "u32"
                                    },
                                    {
                                      "k": "enum",
                                      "t": [
                                        {
                                          "Unspecified": 0
                                        },
                                        {
                                          "Single": 1
                                        },
                                        {
                                          "Double": 2
                                        },
                                        {
                                          "Triple": 3
                                        },
                                        {
                                          "Quadriple": 4
                                        },
                                        {
                                          "Quintuple": 5
                                        },
                                        {
                                          "Sextuple": 6
                                        },
                                        {
                                          "FiveAndAHalf": 250
                                        },
                                        {
                                          "FourAndAHalf": 251
                                        },
                                        {
                                          "ThreeAndAHalf": 252
                                        },
                                        {
                                          "TwoAndAHalf": 253
                                        },
                                        {
                                          "OneAndAHalf": 254
                                        },
                                        {
                                          "Ring": 255
                                        }
                                      ],
                                      "n": "BondOrder"
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "schema_version": {
                            "k": "alias",
                            "t": "string"
                          },
                          "fragment_multiplicities": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "alias",
                                "t": "u8"
                              }
                            }
                          },
                          "velocities": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": "f32"
                            }
                          },
                          "fragment_partial_charges": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "alias",
                                "t": "f32"
                              }
                            }
                          },
                          "geometry": {
                            "k": "array",
                            "t": "f32"
                          },
                          "fragment_formal_charges": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "alias",
                                "t": "i32"
                              }
                            }
                          },
                          "labels": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": "string"
                            }
                          },
                          "fragments": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "array",
                                "t": {
                                  "k": "alias",
                                  "t": "u32"
                                }
                              }
                            }
                          },
                          "partial_charges": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "alias",
                                "t": "f32"
                              }
                            }
                          },
                          "formal_charges": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "alias",
                                "t": "i32"
                              }
                            }
                          }
                        },
                        "n": "Topology"
                      }
                    }
                  },
                  "n": "Object"
                },
                {
                  "k": "record",
                  "t": {
                    "size": "u64",
                    "path": {
                      "k": "@",
                      "t": {
                        "doc": {
                          "fields": {
                            "seqs": "Sequence names, e.g. amino acid or nucleotide names",
                            "seq_ns": "Sequence numbers, identigfying the position of the residue in the sequence",
                            "labeled": "Optional list of residue ids that have labels. Must be present if `labels` is present.\n\nWARN: Deprecated.",
                            "residues": "List of residues",
                            "labels": "Optional list of residue labels. Any given residue may have multiple labels. `labels[i]`\ncorresponds to residue with id `labeled[i]`. Must be present if `labeled` is present.\n\nWARN: Deprecated.",
                            "insertion_codes": "Insertion codes, specifying the order of residues inserted between existing residues"
                          }
                        },
                        "k": "record",
                        "t": {
                          "labels": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "array",
                                "t": "string"
                              }
                            }
                          },
                          "residues": {
                            "k": "array",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "alias",
                                "t": "u32"
                              }
                            }
                          },
                          "labeled": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "alias",
                                "t": "u32"
                              }
                            }
                          },
                          "seqs": {
                            "k": "array",
                            "t": "string"
                          },
                          "insertion_codes": {
                            "k": "array",
                            "t": "string"
                          },
                          "seq_ns": {
                            "k": "array",
                            "t": "i32"
                          }
                        },
                        "n": "Residues"
                      }
                    },
                    "format": {
                      "k": "optional",
                      "t": {
                        "k": "enum",
                        "t": [
                          "json",
                          "bin"
                        ],
                        "n": "ObjectFormat"
                      }
                    }
                  },
                  "n": "Object"
                }
              ]
            }
          },
          {
            "k": "optional",
            "t": "string"
          }
        ]
      }
    },
    {
      "node": {
        "name": "prepare_protein_rex",
        "description": "Prepare a PDB for downstream tasks: protonate, fill missing atoms, etc.",
        "ins": [
          {
            "doc": {
              "fields": {}
            },
            "k": "record",
            "t": {
              "truncation_threshold": {
                "k": "optional",
                "t": "u32"
              },
              "capping_style": {
                "k": "optional",
                "t": {
                  "k": "enum",
                  "t": [
                    "Never",
                    "Truncated",
                    "Always"
                  ],
                  "n": "CappingStyle"
                }
              },
              "naming_scheme": {
                "k": "optional",
                "t": {
                  "k": "enum",
                  "t": [
                    "Amber",
                    "Charmm"
                  ],
                  "n": "NamingScheme"
                }
              },
              "ph": {
                "k": "optional",
                "t": "f32"
              }
            },
            "n": "PrepareProteinOptions"
          },
          {
            "k": "array",
            "t": {
              "k": "tuple",
              "t": [
                {
                  "k": "record",
                  "t": {
                    "path": {
                      "k": "@",
                      "t": {
                        "doc": {
                          "fields": {
                            "partial_charges": "Optional list of the partial charge of each atom. If present, then it\nmust be the same length as `symbols`.",
                            "fragments": "Optional list of fragments. If present, then all atoms must be in\nexactly one fragment.",
                            "fragment_formal_charges": "Optional list of the formal charge of each fragment. If present, then it\nmust be the same length as `fragments`.",
                            "symbols": "Element of each atom.",
                            "fragment_partial_charges": "Optional list of the formal charge of each fragment. If present, then it\nmust be the same length as `fragments`.",
                            "formal_charges": "Optional list of the formal charge of each atom. If present, then it\nmust be the same length as `symbols`.",
                            "connectivity": "Optional list of bonds. Because bonds are perceived, this list should\nnot be considered a reliable source of bond information.",
                            "velocities": "Contains the x, y, z components of initial atom velocities in Angstroms/ps\nV1 only",
                            "geometry": "XYZ coordinates of each atom. It must be 3 times the length of\n`symbols`.",
                            "fragment_multiplicities": "Optional list of the multiplicity of each fragment. This is only\nrelevant for open-shell systems. If present, then it must be the same\nlength as `fragments`.",
                            "labels": "Optional list of the label of each atom. Often this is used for\nlabelling specific atoms within residues (e.g. alpha carbons). If\npresent, then it must be the same length as `symbols`."
                          }
                        },
                        "k": "record",
                        "t": {
                          "partial_charges": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "alias",
                                "t": "f32"
                              }
                            }
                          },
                          "fragment_partial_charges": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "alias",
                                "t": "f32"
                              }
                            }
                          },
                          "labels": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": "string"
                            }
                          },
                          "schema_version": {
                            "k": "alias",
                            "t": "string"
                          },
                          "symbols": {
                            "k": "array",
                            "t": {
                              "k": "enum",
                              "t": [
                                {
                                  "H": 1
                                },
                                "He",
                                "Li",
                                "Be",
                                "B",
                                "C",
                                "N",
                                "O",
                                "F",
                                "Ne",
                                "Na",
                                "Mg",
                                "Al",
                                "Si",
                                "P",
                                "S",
                                "Cl",
                                "Ar",
                                "K",
                                "Ca",
                                "Sc",
                                "Ti",
                                "V",
                                "Cr",
                                "Mn",
                                "Fe",
                                "Co",
                                "Ni",
                                "Cu",
                                "Zn",
                                "Ga",
                                "Ge",
                                "As",
                                "Se",
                                "Br",
                                "Kr",
                                "Rb",
                                "Sr",
                                "Y",
                                "Zr",
                                "Nb",
                                "Mo",
                                "Tc",
                                "Ru",
                                "Rh",
                                "Pd",
                                "Ag",
                                "Cd",
                                "In",
                                "Sn",
                                "Sb",
                                "Te",
                                "I",
                                "Xe",
                                "Cs",
                                "Ba",
                                "La",
                                "Ce",
                                "Pr",
                                "Nd",
                                "Pm",
                                "Sm",
                                "Eu",
                                "Gd",
                                "Tb",
                                "Dy",
                                "Ho",
                                "Er",
                                "Tm",
                                "Yb",
                                "Lu",
                                "Hf",
                                "Ta",
                                "W",
                                "Re",
                                "Os",
                                "Ir",
                                "Pt",
                                "Au",
                                "Hg",
                                "Tl",
                                "Pb",
                                "Bi",
                                "Po",
                                "At",
                                "Rn",
                                "Fr",
                                "Ra",
                                "Ac",
                                "Th",
                                "Pa",
                                "U",
                                "Np",
                                "Pu",
                                "Am",
                                "Cm",
                                "Bk",
                                "Cf",
                                "Es",
                                "Fm",
                                "Md",
                                "No",
                                "Lr",
                                "Rf",
                                "Db",
                                "Sg",
                                "Bh",
                                "Hs",
                                "Mt",
                                "Ds",
                                "Rg",
                                "Cn",
                                "Nh",
                                "Fl",
                                "Mc",
                                "Lv",
                                "Ts",
                                "Og"
                              ],
                              "n": "Element"
                            }
                          },
                          "fragment_formal_charges": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "alias",
                                "t": "i32"
                              }
                            }
                          },
                          "velocities": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": "f32"
                            }
                          },
                          "connectivity": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "alias",
                                "t": {
                                  "k": "tuple",
                                  "t": [
                                    {
                                      "k": "alias",
                                      "t": "u32"
                                    },
                                    {
                                      "k": "alias",
                                      "t": "u32"
                                    },
                                    {
                                      "k": "enum",
                                      "t": [
                                        {
                                          "Unspecified": 0
                                        },
                                        {
                                          "Single": 1
                                        },
                                        {
                                          "Double": 2
                                        },
                                        {
                                          "Triple": 3
                                        },
                                        {
                                          "Quadriple": 4
                                        },
                                        {
                                          "Quintuple": 5
                                        },
                                        {
                                          "Sextuple": 6
                                        },
                                        {
                                          "FiveAndAHalf": 250
                                        },
                                        {
                                          "FourAndAHalf": 251
                                        },
                                        {
                                          "ThreeAndAHalf": 252
                                        },
                                        {
                                          "TwoAndAHalf": 253
                                        },
                                        {
                                          "OneAndAHalf": 254
                                        },
                                        {
                                          "Ring": 255
                                        }
                                      ],
                                      "n": "BondOrder"
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "fragment_multiplicities": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "alias",
                                "t": "u8"
                              }
                            }
                          },
                          "fragments": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "array",
                                "t": {
                                  "k": "alias",
                                  "t": "u32"
                                }
                              }
                            }
                          },
                          "geometry": {
                            "k": "array",
                            "t": "f32"
                          },
                          "formal_charges": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "alias",
                                "t": "i32"
                              }
                            }
                          }
                        },
                        "n": "Topology"
                      }
                    },
                    "format": {
                      "k": "optional",
                      "t": {
                        "k": "enum",
                        "t": [
                          "json",
                          "bin"
                        ],
                        "n": "ObjectFormat"
                      }
                    },
                    "size": "u64"
                  },
                  "n": "Object"
                },
                {
                  "k": "record",
                  "t": {
                    "path": {
                      "k": "@",
                      "t": {
                        "doc": {
                          "fields": {
                            "seq_ns": "Sequence numbers, identigfying the position of the residue in the sequence",
                            "labeled": "Optional list of residue ids that have labels. Must be present if `labels` is present.\n\nWARN: Deprecated.",
                            "insertion_codes": "Insertion codes, specifying the order of residues inserted between existing residues",
                            "residues": "List of residues",
                            "seqs": "Sequence names, e.g. amino acid or nucleotide names",
                            "labels": "Optional list of residue labels. Any given residue may have multiple labels. `labels[i]`\ncorresponds to residue with id `labeled[i]`. Must be present if `labeled` is present.\n\nWARN: Deprecated."
                          }
                        },
                        "k": "record",
                        "t": {
                          "insertion_codes": {
                            "k": "array",
                            "t": "string"
                          },
                          "seq_ns": {
                            "k": "array",
                            "t": "i32"
                          },
                          "labeled": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "alias",
                                "t": "u32"
                              }
                            }
                          },
                          "residues": {
                            "k": "array",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "alias",
                                "t": "u32"
                              }
                            }
                          },
                          "labels": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "array",
                                "t": "string"
                              }
                            }
                          },
                          "seqs": {
                            "k": "array",
                            "t": "string"
                          }
                        },
                        "n": "Residues"
                      }
                    },
                    "format": {
                      "k": "optional",
                      "t": {
                        "k": "enum",
                        "t": [
                          "json",
                          "bin"
                        ],
                        "n": "ObjectFormat"
                      }
                    },
                    "size": "u64"
                  },
                  "n": "Object"
                },
                {
                  "k": "record",
                  "t": {
                    "size": "u64",
                    "format": {
                      "k": "optional",
                      "t": {
                        "k": "enum",
                        "t": [
                          "json",
                          "bin"
                        ],
                        "n": "ObjectFormat"
                      }
                    },
                    "path": {
                      "k": "@",
                      "t": {
                        "doc": {
                          "fields": {
                            "labels": "WARN: Deprecated.",
                            "labeled": "WARN: Deprecated."
                          }
                        },
                        "k": "record",
                        "t": {
                          "chains": {
                            "k": "array",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "alias",
                                "t": "u32"
                              }
                            }
                          },
                          "labels": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "array",
                                "t": "string"
                              }
                            }
                          },
                          "labeled": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "alias",
                                "t": "u32"
                              }
                            }
                          }
                        },
                        "n": "Chains"
                      }
                    }
                  },
                  "n": "Object"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "node": {
        "name": "dojo_rex",
        "description": "Run a molecular mechanics simulation.",
        "ins": [
          {
            "doc": {
              "fields": {
                "simulation": "Simulation parameters.",
                "frames": "Output frame parameters.",
                "constraints": "Constraints to apply for the simulation. Options are None, HBonds, AllBonds, HAngles.",
                "solvation": "Solvation parameters.",
                "nonbonded_method": "Method to use for nonbonded forces.\nOptions are NoCutoff, CutoffNonPeriodic, CutoffPeriodic, Ewald, PME, LJPME.",
                "nonbonded_cutoff_nm": "Cutoff distance for nonbnded forces, in nm.",
                "trajectory": "Output trajectory parameters.",
                "generate_ff_indices": "Input conformer indices for which force fields need to be generated for the residues."
              }
            },
            "k": "record",
            "t": {
              "remove_cm_motion": {
                "k": "optional",
                "t": "bool"
              },
              "termination_condition": {
                "k": "optional",
                "t": {
                  "doc": {
                    "fields": {}
                  },
                  "k": "record",
                  "t": {
                    "bonds": {
                      "k": "array",
                      "t": {
                        "doc": {
                          "fields": {}
                        },
                        "k": "record",
                        "t": {
                          "index1": "u32",
                          "index2": "u32",
                          "broken": {
                            "k": "optional",
                            "t": "bool"
                          }
                        },
                        "n": "Bond"
                      }
                    },
                    "tail_steps": {
                      "k": "optional",
                      "t": "u32"
                    }
                  },
                  "n": "TerminationCondition"
                }
              },
              "qm_cutoff_distance_ang": {
                "k": "optional",
                "t": "f64"
              },
              "single_frame_serialise": {
                "k": "optional",
                "t": "bool"
              },
              "metadynamics": {
                "k": "optional",
                "t": {
                  "k": "array",
                  "t": {
                    "doc": {
                      "fields": {}
                    },
                    "k": "record",
                    "t": {
                      "cvs": {
                        "k": "array",
                        "t": {
                          "doc": {
                            "fields": {}
                          },
                          "k": "record",
                          "t": {
                            "min": "f64",
                            "max": "f64",
                            "num_samples": "u32",
                            "variable": {
                              "k": "union",
                              "t": [
                                {
                                  "Bond": {
                                    "index2": "u32",
                                    "index1": "u32"
                                  }
                                },
                                {
                                  "Dihedral": {
                                    "index3": "u32",
                                    "index1": "u32",
                                    "index2": "u32",
                                    "index4": "u32"
                                  }
                                },
                                {
                                  "Centroid": [
                                    {
                                      "k": "union",
                                      "t": [
                                        {
                                          "Indices": {
                                            "group2": {
                                              "k": "array",
                                              "t": "i32"
                                            },
                                            "group1": {
                                              "k": "array",
                                              "t": "i32"
                                            }
                                          }
                                        },
                                        {
                                          "Residues": {
                                            "residues1": {
                                              "k": "array",
                                              "t": "i32"
                                            },
                                            "residues2": {
                                              "k": "array",
                                              "t": "i32"
                                            },
                                            "file_index2": "i32",
                                            "file_index1": "i32"
                                          }
                                        },
                                        {
                                          "Files": {
                                            "file1": "i32",
                                            "file2": "i32"
                                          }
                                        }
                                      ],
                                      "n": "Centroid"
                                    }
                                  ]
                                },
                                {
                                  "Rmsd": {
                                    "reference_positions": {
                                      "k": "array",
                                      "t": "f64"
                                    },
                                    "atom_indices": {
                                      "k": "array",
                                      "t": "i32"
                                    }
                                  }
                                }
                              ],
                              "n": "CV"
                            }
                          },
                          "n": "MTDCVParameters"
                        }
                      },
                      "height": {
                        "k": "union",
                        "t": [
                          {
                            "Constant": {
                              "height": "f64"
                            }
                          },
                          {
                            "WellTempered": {
                              "delta_t": "f64",
                              "initial_deposition_rate": "f64"
                            }
                          }
                        ],
                        "n": "MTDHeight"
                      },
                      "exp_sigma": "f64",
                      "csv_output": {
                        "k": "optional",
                        "t": "string"
                      },
                      "bias_period": "u32"
                    },
                    "n": "Metadynamics"
                  }
                }
              },
              "generate_ff_indices": {
                "k": "optional",
                "t": {
                  "k": "array",
                  "t": "u32"
                }
              },
              "simulation": {
                "doc": {
                  "fields": {
                    "stages": "List of simulation stages.",
                    "step_size_ps": "Step size for the simulation, in ps.",
                    "periodic_box_vectors_nm": "Vectors for the periodic box."
                  }
                },
                "k": "record",
                "t": {
                  "periodic_box_vectors_nm": {
                    "k": "optional",
                    "t": {
                      "doc": {
                        "fields": {}
                      },
                      "k": "record",
                      "t": {
                        "v2": {
                          "k": "tuple",
                          "t": [
                            "f64",
                            "f64",
                            "f64"
                          ]
                        },
                        "v1": {
                          "k": "tuple",
                          "t": [
                            "f64",
                            "f64",
                            "f64"
                          ]
                        },
                        "v3": {
                          "k": "tuple",
                          "t": [
                            "f64",
                            "f64",
                            "f64"
                          ]
                        }
                      },
                      "n": "BoxVectors"
                    }
                  },
                  "stages": {
                    "k": "array",
                    "t": {
                      "k": "union",
                      "t": [
                        {
                          "Minimisation": [
                            {
                              "doc": {
                                "fields": {
                                  "max_iterations": "Maximum number of minimisation iterations.",
                                  "qm_minimisation_technique": "Minimisation technique.",
                                  "err_tol_kj_per_mol_per_nm": "Error tolerance threshold for minimisation.",
                                  "use_bias": "Whether or not to include bias potentials during minimisation."
                                }
                              },
                              "k": "record",
                              "t": {
                                "err_tol_kj_per_mol_per_nm": {
                                  "k": "optional",
                                  "t": "f64"
                                },
                                "max_iterations": {
                                  "k": "optional",
                                  "t": "u32"
                                },
                                "qm_minimisation_technique": {
                                  "k": "optional",
                                  "t": {
                                    "k": "enum",
                                    "t": [
                                      "None",
                                      "Dynamics",
                                      "Bfgs"
                                    ],
                                    "n": "MinimisationTechnique"
                                  }
                                },
                                "use_bias": {
                                  "k": "optional",
                                  "t": "bool"
                                }
                              },
                              "n": "MinimisationParameters"
                            }
                          ]
                        },
                        {
                          "Nvt": [
                            {
                              "doc": {
                                "fields": {
                                  "temperature_kelvin": "Temperature for the thermostat.",
                                  "steps": "Number of steps to run the stage for.",
                                  "temperature_step": "Temperature step for the thermostat.",
                                  "starting_temperature_kelvin": "Starting temperature for the thermostat."
                                }
                              },
                              "k": "record",
                              "t": {
                                "steps": "u32",
                                "temperature_step": {
                                  "k": "optional",
                                  "t": "f64"
                                },
                                "temperature_kelvin": "f64",
                                "starting_temperature_kelvin": {
                                  "k": "optional",
                                  "t": "f64"
                                }
                              },
                              "n": "NVTParameters"
                            }
                          ]
                        },
                        {
                          "Npt": [
                            {
                              "doc": {
                                "fields": {
                                  "temperature_kelvin": "Temperature for the thermostat.",
                                  "steps": "Number of steps to run the stage for.",
                                  "pressure_atm": "Pressure for the barostat."
                                }
                              },
                              "k": "record",
                              "t": {
                                "steps": "u32",
                                "temperature_kelvin": "f64",
                                "pressure_atm": "f64"
                              },
                              "n": "NPTParameters"
                            }
                          ]
                        }
                      ],
                      "n": "SimulationStage"
                    }
                  },
                  "step_size_ps": "f64"
                },
                "n": "Simulation"
              },
              "nonbonded_method": {
                "k": "optional",
                "t": {
                  "k": "enum",
                  "t": [
                    "NoCutoff",
                    "CutoffNonPeriodic",
                    "CutoffPeriodic",
                    "Ewald",
                    "Pme",
                    "Ljpme"
                  ],
                  "n": "NonbondedMethod"
                }
              },
              "qdxf_export": {
                "k": "optional",
                "t": {
                  "doc": {
                    "fields": {
                      "interval": "Interval between output frames."
                    }
                  },
                  "k": "record",
                  "t": {
                    "interval": "u32"
                  },
                  "n": "QDXFExport"
                }
              },
              "trajectory": {
                "k": "optional",
                "t": {
                  "doc": {
                    "fields": {}
                  },
                  "k": "record",
                  "t": {
                    "windowed": {
                      "k": "optional",
                      "t": "bool"
                    },
                    "minimisation": {
                      "k": "optional",
                      "t": "bool"
                    },
                    "interval": {
                      "k": "optional",
                      "t": "i32"
                    },
                    "forces": {
                      "k": "optional",
                      "t": {
                        "k": "enum",
                        "t": [
                          "None",
                          "Qm",
                          "Dynamics",
                          "Bias",
                          "Mtd"
                        ],
                        "n": "TrajectoryForcesType"
                      }
                    },
                    "info": {
                      "k": "optional",
                      "t": "bool"
                    },
                    "residues": {
                      "k": "optional",
                      "t": {
                        "k": "array",
                        "t": {
                          "doc": {
                            "fields": {}
                          },
                          "k": "record",
                          "t": {
                            "residues": {
                              "k": "array",
                              "t": "u32"
                            },
                            "file_index": "u32"
                          },
                          "n": "ResidueSpecification"
                        }
                      }
                    },
                    "window_size": {
                      "k": "optional",
                      "t": "i32"
                    }
                  },
                  "n": "Trajectory"
                }
              },
              "nonbonded_cutoff_nm": {
                "k": "optional",
                "t": "f64"
              },
              "save_final_trcs": {
                "k": "optional",
                "t": "bool"
              },
              "bias_schedule": {
                "k": "optional",
                "t": {
                  "doc": {
                    "fields": {}
                  },
                  "k": "record",
                  "t": {
                    "active_potentials": {
                      "k": "array",
                      "t": {
                        "k": "array",
                        "t": "i32"
                      }
                    },
                    "triggers": {
                      "k": "array",
                      "t": {
                        "k": "array",
                        "t": {
                          "doc": {
                            "fields": {}
                          },
                          "k": "record",
                          "t": {
                            "index1": "u32",
                            "broken": {
                              "k": "optional",
                              "t": "bool"
                            },
                            "index2": "u32"
                          },
                          "n": "Bond"
                        }
                      }
                    }
                  },
                  "n": "BiasSchedule"
                }
              },
              "solvation": {
                "k": "optional",
                "t": {
                  "k": "union",
                  "t": [
                    {
                      "BoxSizeNm": [
                        {
                          "k": "tuple",
                          "t": [
                            "f64",
                            "f64",
                            "f64"
                          ]
                        }
                      ]
                    },
                    {
                      "BoxVectorsNm": [
                        {
                          "doc": {
                            "fields": {}
                          },
                          "k": "record",
                          "t": {
                            "v1": {
                              "k": "tuple",
                              "t": [
                                "f64",
                                "f64",
                                "f64"
                              ]
                            },
                            "v2": {
                              "k": "tuple",
                              "t": [
                                "f64",
                                "f64",
                                "f64"
                              ]
                            },
                            "v3": {
                              "k": "tuple",
                              "t": [
                                "f64",
                                "f64",
                                "f64"
                              ]
                            }
                          },
                          "n": "BoxVectors"
                        }
                      ]
                    },
                    {
                      "PaddingNm": [
                        "f64"
                      ]
                    },
                    {
                      "NumAdded": [
                        "u32"
                      ]
                    }
                  ],
                  "n": "SolvationParameters"
                }
              },
              "frames": {
                "k": "optional",
                "t": {
                  "doc": {
                    "fields": {
                      "interval": "Interval between output frames.",
                      "start": "Timestep of the first frame to output.",
                      "stop": "Timestep of the final frame to output."
                    }
                  },
                  "k": "record",
                  "t": {
                    "start": "u32",
                    "interval": "u32",
                    "stop": "u32"
                  },
                  "n": "Frames"
                }
              },
              "constraints": {
                "k": "optional",
                "t": {
                  "k": "enum",
                  "t": [
                    "None",
                    "HBonds",
                    "AllBonds",
                    "HAngles"
                  ],
                  "n": "Constraints"
                }
              },
              "implicit_solvent": {
                "k": "optional",
                "t": "bool"
              },
              "force_fields": {
                "k": "optional",
                "t": {
                  "k": "array",
                  "t": {
                    "k": "union",
                    "t": [
                      "Ff14sb",
                      "Tip3pStandard",
                      {
                        "Custom": [
                          "string"
                        ]
                      }
                    ],
                    "n": "ForceField"
                  }
                }
              },
              "bias_potentials": {
                "k": "optional",
                "t": {
                  "k": "array",
                  "t": {
                    "k": "union",
                    "t": [
                      {
                        "BondLinear": [
                          {
                            "doc": {
                              "fields": {}
                            },
                            "k": "record",
                            "t": {
                              "offset": "f64",
                              "index1": "u32",
                              "slope": "f64",
                              "index2": "u32"
                            },
                            "n": "BondLinearParameters"
                          }
                        ]
                      },
                      {
                        "RmsdExp": [
                          {
                            "doc": {
                              "fields": {}
                            },
                            "k": "record",
                            "t": {
                              "sigma": "f64",
                              "atom_indices": {
                                "k": "array",
                                "t": "u32"
                              },
                              "reference_positions": {
                                "k": "array",
                                "t": "f64"
                              },
                              "offset": "f64",
                              "height": "f64"
                            },
                            "n": "RMSDExpParameters"
                          }
                        ]
                      },
                      {
                        "MovingBondHarmonic": [
                          {
                            "doc": {
                              "fields": {}
                            },
                            "k": "record",
                            "t": {
                              "initial_offset_nm": {
                                "k": "optional",
                                "t": "f64"
                              },
                              "index1": "u32",
                              "k": "f64",
                              "index2": "u32",
                              "resolution_nm": "f64",
                              "rate_nm_per_ps": "f64",
                              "final_offset_nm": {
                                "k": "optional",
                                "t": "f64"
                              }
                            },
                            "n": "MovingBondHarmonicParameters"
                          }
                        ]
                      },
                      {
                        "HarmonicCv": [
                          {
                            "doc": {
                              "fields": {}
                            },
                            "k": "record",
                            "t": {
                              "offset": "f64",
                              "k": "f64",
                              "cv": {
                                "k": "union",
                                "t": [
                                  {
                                    "Bond": {
                                      "index1": "u32",
                                      "index2": "u32"
                                    }
                                  },
                                  {
                                    "Dihedral": {
                                      "index1": "u32",
                                      "index4": "u32",
                                      "index2": "u32",
                                      "index3": "u32"
                                    }
                                  },
                                  {
                                    "Centroid": [
                                      {
                                        "k": "union",
                                        "t": [
                                          {
                                            "Indices": {
                                              "group2": {
                                                "k": "array",
                                                "t": "i32"
                                              },
                                              "group1": {
                                                "k": "array",
                                                "t": "i32"
                                              }
                                            }
                                          },
                                          {
                                            "Residues": {
                                              "file_index1": "i32",
                                              "file_index2": "i32",
                                              "residues2": {
                                                "k": "array",
                                                "t": "i32"
                                              },
                                              "residues1": {
                                                "k": "array",
                                                "t": "i32"
                                              }
                                            }
                                          },
                                          {
                                            "Files": {
                                              "file1": "i32",
                                              "file2": "i32"
                                            }
                                          }
                                        ],
                                        "n": "Centroid"
                                      }
                                    ]
                                  },
                                  {
                                    "Rmsd": {
                                      "atom_indices": {
                                        "k": "array",
                                        "t": "i32"
                                      },
                                      "reference_positions": {
                                        "k": "array",
                                        "t": "f64"
                                      }
                                    }
                                  }
                                ],
                                "n": "CV"
                              }
                            },
                            "n": "HarmonicCVParameters"
                          }
                        ]
                      }
                    ],
                    "n": "BiasPotential"
                  }
                }
              },
              "num_gpus": {
                "k": "optional",
                "t": "u8"
              },
              "qm_region": {
                "k": "optional",
                "t": {
                  "doc": {
                    "fields": {}
                  },
                  "k": "record",
                  "t": {
                    "engine": {
                      "k": "enum",
                      "t": [
                        "None",
                        "QChem",
                        "Xtb",
                        "Exess"
                      ],
                      "n": "QMEngine"
                    },
                    "regions": {
                      "k": "array",
                      "t": {
                        "doc": {
                          "fields": {}
                        },
                        "k": "record",
                        "t": {
                          "file_index": "u32",
                          "residues": {
                            "k": "array",
                            "t": "u32"
                          }
                        },
                        "n": "QMRegionEntry"
                      }
                    }
                  },
                  "n": "QMRegion"
                }
              },
              "save_velocities": {
                "k": "optional",
                "t": "bool"
              }
            },
            "n": "Parameters"
          },
          {
            "k": "array",
            "t": {
              "k": "tuple",
              "t": [
                {
                  "k": "record",
                  "t": {
                    "size": "u64",
                    "format": {
                      "k": "optional",
                      "t": {
                        "k": "enum",
                        "t": [
                          "json",
                          "bin"
                        ],
                        "n": "ObjectFormat"
                      }
                    },
                    "path": {
                      "k": "@",
                      "t": {
                        "doc": {
                          "fields": {
                            "geometry": "XYZ coordinates of each atom. It must be 3 times the length of\n`symbols`.",
                            "connectivity": "Optional list of bonds. Because bonds are perceived, this list should\nnot be considered a reliable source of bond information.",
                            "fragments": "Optional list of fragments. If present, then all atoms must be in\nexactly one fragment.",
                            "symbols": "Element of each atom.",
                            "labels": "Optional list of the label of each atom. Often this is used for\nlabelling specific atoms within residues (e.g. alpha carbons). If\npresent, then it must be the same length as `symbols`.",
                            "partial_charges": "Optional list of the partial charge of each atom. If present, then it\nmust be the same length as `symbols`.",
                            "formal_charges": "Optional list of the formal charge of each atom. If present, then it\nmust be the same length as `symbols`.",
                            "fragment_partial_charges": "Optional list of the formal charge of each fragment. If present, then it\nmust be the same length as `fragments`.",
                            "fragment_formal_charges": "Optional list of the formal charge of each fragment. If present, then it\nmust be the same length as `fragments`.",
                            "fragment_multiplicities": "Optional list of the multiplicity of each fragment. This is only\nrelevant for open-shell systems. If present, then it must be the same\nlength as `fragments`.",
                            "velocities": "Contains the x, y, z components of initial atom velocities in Angstroms/ps\nV1 only"
                          }
                        },
                        "k": "record",
                        "t": {
                          "geometry": {
                            "k": "array",
                            "t": "f32"
                          },
                          "schema_version": {
                            "k": "alias",
                            "t": "string"
                          },
                          "velocities": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": "f32"
                            }
                          },
                          "symbols": {
                            "k": "array",
                            "t": {
                              "k": "enum",
                              "t": [
                                {
                                  "H": 1
                                },
                                "He",
                                "Li",
                                "Be",
                                "B",
                                "C",
                                "N",
                                "O",
                                "F",
                                "Ne",
                                "Na",
                                "Mg",
                                "Al",
                                "Si",
                                "P",
                                "S",
                                "Cl",
                                "Ar",
                                "K",
                                "Ca",
                                "Sc",
                                "Ti",
                                "V",
                                "Cr",
                                "Mn",
                                "Fe",
                                "Co",
                                "Ni",
                                "Cu",
                                "Zn",
                                "Ga",
                                "Ge",
                                "As",
                                "Se",
                                "Br",
                                "Kr",
                                "Rb",
                                "Sr",
                                "Y",
                                "Zr",
                                "Nb",
                                "Mo",
                                "Tc",
                                "Ru",
                                "Rh",
                                "Pd",
                                "Ag",
                                "Cd",
                                "In",
                                "Sn",
                                "Sb",
                                "Te",
                                "I",
                                "Xe",
                                "Cs",
                                "Ba",
                                "La",
                                "Ce",
                                "Pr",
                                "Nd",
                                "Pm",
                                "Sm",
                                "Eu",
                                "Gd",
                                "Tb",
                                "Dy",
                                "Ho",
                                "Er",
                                "Tm",
                                "Yb",
                                "Lu",
                                "Hf",
                                "Ta",
                                "W",
                                "Re",
                                "Os",
                                "Ir",
                                "Pt",
                                "Au",
                                "Hg",
                                "Tl",
                                "Pb",
                                "Bi",
                                "Po",
                                "At",
                                "Rn",
                                "Fr",
                                "Ra",
                                "Ac",
                                "Th",
                                "Pa",
                                "U",
                                "Np",
                                "Pu",
                                "Am",
                                "Cm",
                                "Bk",
                                "Cf",
                                "Es",
                                "Fm",
                                "Md",
                                "No",
                                "Lr",
                                "Rf",
                                "Db",
                                "Sg",
                                "Bh",
                                "Hs",
                                "Mt",
                                "Ds",
                                "Rg",
                                "Cn",
                                "Nh",
                                "Fl",
                                "Mc",
                                "Lv",
                                "Ts",
                                "Og"
                              ],
                              "n": "Element"
                            }
                          },
                          "formal_charges": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "alias",
                                "t": "i32"
                              }
                            }
                          },
                          "connectivity": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "alias",
                                "t": {
                                  "k": "tuple",
                                  "t": [
                                    {
                                      "k": "alias",
                                      "t": "u32"
                                    },
                                    {
                                      "k": "alias",
                                      "t": "u32"
                                    },
                                    {
                                      "k": "enum",
                                      "t": [
                                        {
                                          "Unspecified": 0
                                        },
                                        {
                                          "Single": 1
                                        },
                                        {
                                          "Double": 2
                                        },
                                        {
                                          "Triple": 3
                                        },
                                        {
                                          "Quadriple": 4
                                        },
                                        {
                                          "Quintuple": 5
                                        },
                                        {
                                          "Sextuple": 6
                                        },
                                        {
                                          "FiveAndAHalf": 250
                                        },
                                        {
                                          "FourAndAHalf": 251
                                        },
                                        {
                                          "ThreeAndAHalf": 252
                                        },
                                        {
                                          "TwoAndAHalf": 253
                                        },
                                        {
                                          "OneAndAHalf": 254
                                        },
                                        {
                                          "Ring": 255
                                        }
                                      ],
                                      "n": "BondOrder"
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "partial_charges": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "alias",
                                "t": "f32"
                              }
                            }
                          },
                          "fragment_formal_charges": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "alias",
                                "t": "i32"
                              }
                            }
                          },
                          "fragment_multiplicities": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "alias",
                                "t": "u8"
                              }
                            }
                          },
                          "fragments": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "array",
                                "t": {
                                  "k": "alias",
                                  "t": "u32"
                                }
                              }
                            }
                          },
                          "fragment_partial_charges": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "alias",
                                "t": "f32"
                              }
                            }
                          },
                          "labels": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": "string"
                            }
                          }
                        },
                        "n": "Topology"
                      }
                    }
                  },
                  "n": "Object"
                },
                {
                  "k": "record",
                  "t": {
                    "format": {
                      "k": "optional",
                      "t": {
                        "k": "enum",
                        "t": [
                          "json",
                          "bin"
                        ],
                        "n": "ObjectFormat"
                      }
                    },
                    "path": {
                      "k": "@",
                      "t": {
                        "doc": {
                          "fields": {
                            "insertion_codes": "Insertion codes, specifying the order of residues inserted between existing residues",
                            "labeled": "Optional list of residue ids that have labels. Must be present if `labels` is present.\n\nWARN: Deprecated.",
                            "labels": "Optional list of residue labels. Any given residue may have multiple labels. `labels[i]`\ncorresponds to residue with id `labeled[i]`. Must be present if `labeled` is present.\n\nWARN: Deprecated.",
                            "seq_ns": "Sequence numbers, identigfying the position of the residue in the sequence",
                            "residues": "List of residues",
                            "seqs": "Sequence names, e.g. amino acid or nucleotide names"
                          }
                        },
                        "k": "record",
                        "t": {
                          "insertion_codes": {
                            "k": "array",
                            "t": "string"
                          },
                          "seqs": {
                            "k": "array",
                            "t": "string"
                          },
                          "labeled": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "alias",
                                "t": "u32"
                              }
                            }
                          },
                          "labels": {
                            "k": "optional",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "array",
                                "t": "string"
                              }
                            }
                          },
                          "residues": {
                            "k": "array",
                            "t": {
                              "k": "array",
                              "t": {
                                "k": "alias",
                                "t": "u32"
                              }
                            }
                          },
                          "seq_ns": {
                            "k": "array",
                            "t": "i32"
                          }
                        },
                        "n": "Residues"
                      }
                    },
                    "size": "u64"
                  },
                  "n": "Object"
                }
              ]
            }
          },
          {
            "k": "optional",
            "t": {
              "k": "array",
              "t": {
                "k": "record",
                "t": {
                  "size": "u64",
                  "format": {
                    "k": "optional",
                    "t": {
                      "k": "enum",
                      "t": [
                        "json",
                        "bin"
                      ],
                      "n": "ObjectFormat"
                    }
                  },
                  "path": {
                    "k": "@",
                    "t": "$XML"
                  }
                },
                "n": "Object"
              }
            }
          }
        ]
      }
    }
  ]
}